#!/bin/bash
#set ($ismac = $os_name.toLowerCase().contains("mac"))
#set ($notmac = !$ismac)
#set ($iswin = $os_name.toLowerCase().contains("win"))
#set ($notwin = !$iswin)
#if ($iswin)
get_short_path() {
    local td=$(cmd //c for %I in \( "`echo $1 | sed 's/\///'  | sed 's/^\(.\)/\1:/' | tr '/' '\\' 2>/dev/null`" \) do echo %~fsI | tail -n1);
    local ty=$(echo "$td" | sed "s/://" | tr '\\' '/' 2>/dev/null);
    echo "/$ty";
}
#end
script_dir="$(cd "$(dirname "$(readlink -f "$0")")" && pwd)"
#if ($iswin)
    script_dir=$(get_short_path "$script_dir");
#end
cd $script_dir/..
#if ($data_version)
if [ -f "$script_dir/refdata/__READY__" ]; then
    echo "Reference data initialization is skipped because it was already prepared"
else
    echo "Reference data initialization"
    if [ -d "$script_dir/refdata" ]; then
        rm -r $script_dir/refdata/*
    else
        mkdir $script_dir/refdata
    fi
    $script_dir/run_docker.sh run #if($notmac && $notwin)--user $(id -u) #{end}-v $script_dir/workdir:/kb/module/work -v $script_dir/refdata:/data -v $script_dir/../data:/kb/module/data -e "SDK_CALLBACK_URL=$1" test/${module_name.toLowerCase()}:latest init
fi
if [ -f "$script_dir/refdata/__READY__" ]; then
    $script_dir/run_docker.sh run #if($notmac && $notwin)--user $(id -u) #{end}-v $script_dir/workdir:/kb/module/work -v $script_dir/refdata:/data:ro -e "SDK_CALLBACK_URL=$1" test/${module_name.toLowerCase()}:latest test
else
    echo "ERROR: __READY__ file is not detected. Reference data initialization wasn't done correctly."
    exit 1
fi
#else
$script_dir/run_docker.sh run #if($notmac && $notwin)--user $(id -u) #{end}-v $script_dir/workdir:/kb/module/work -e "SDK_CALLBACK_URL=$1" test/${module_name.toLowerCase()}:latest test
#end
